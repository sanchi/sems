-- http_mscp - outgoing call leg 
-- call set up by createCall from http, and controlled over http

-- import(mod_conference);

-- for posting call status to SC
import(mod_curl);

import(mod_sys);
import(mod_utils);

initial state START
enter {
  log(3, $scSessionId);
  log(3, $timeout);
  set($my_cep_url=$config.cep_url);
  append($my_cep_url, @local_tag);
    
-- logAll(3);
-- set($enable_request_events="true");
 set($enable_reply_events="true");
};

-- transition "connecting" START / setTimer(1, $timeout) -> CONNECTING;

transition "reply in connecting state" START - sipReply(#code<200) / {
  log(3, "------------------------------------ reply received -------------------");
  
  set($msgType="CallProgressing");
  set($CallProcessing.msCallId=@local_tag);
  set($CallProcessing.csCallId=scSessionId);
  sys.getTimestamp(now);
  sets($CallProcessing.timestamp="(int)$now.tv_sec");
  sets($CallProcessing.status="(int)100");
  -- utils.splitStringCR(#headers); todo
  -- todo: body
  
  -- encode into json to variable $msg
  toJson($msg,(struct)CallProcessing);
  logAll(3);
  
  -- here the CEP is sent using mod_curl:
  curl.post($my_cep_url, msgType;msg);
} -> START;

-- post state to other leg
transition "early in callee leg" START - early / {
  logAll(3);
} -> START;

transition "ringing in callee leg" START - ringing / {
  logAll(3);
} -> START;

transition "failed callee leg" START - failed / {
  logAll(3);
  stop(false);
} -> END;

transition "session starts in callee leg" START - sessionStart / {
  set($b_status=CONNECTED);
  logAll(3);
} -> CONNECTED;

-- audio is connected
state CONNECTED;

transition "BYE received" CONNECTED - hangup / {
  logAll(3);
  --set($b_status=DISCONNECT);
  --postEvent($b_leg_var.a_ltag, b_status);
  -- stop the call
  stop(false);
} -> END;


transition "CCP Disconnect cmd" CONNECTED - event(#msgType=="Disconnect") / {
  logAll(3);
  stop(true);
} -> END;


transition "other event received event" CONNECTED - event() / {
  logParams(3);
} -> CONNECTED;

state END;